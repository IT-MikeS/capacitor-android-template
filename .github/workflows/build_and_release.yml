name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      id: pnpm-install
      with: 
          version: 8
          run_install: false
    
    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - name: Setup pnpm cache 
      uses: actions/cache@v3
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install

    - name: Run build script
      run: pnpm run build

    - name: Semantic Release
      id: semantic
      uses: cycjimmy/semantic-release-action@v3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        dry_run: true
        branches: | 
          [
            'main'
          ]

    - name: Create GitHub release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.semantic.outputs.new_version }}
        release_name: Release ${{ steps.semantic.outputs.new_version }}
        body: ${{ steps.semantic.outputs.release_notes }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.semantic.outputs.publish_url }}
        asset_path: ./dist/android-template.tar.gz
        asset_name: android-template.tar.gz
        asset_content_type: application/gzip